{"name": "检查用户是否登陆成功", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200", "trace": "self = <testcase.testcase_pytest.test_usermanage.TestUserManage object at 0x7fa89d6003d0>\ntoken_fix = '87967688987'\ndata = {'headers': {'Authorization': '${Authorization}', 'Content-Type': 'application/json;charset=UTF-8', 'Cookie': '${Cookie}'}, 'method': 'get', 'title': '检查用户是否登陆成功', 'url': '/dc-wisdom-manager/web/auth/getLoginInfo'}\n\n    @allure.story(\"检查用户登陆情况\")\n    @pytest.mark.parametrize('data', yaml_read_dict(pytest_datadriver_path+'check_login.yaml'))\n    def test_check_login(self, token_fix, data):\n        source_data = data  # yaml文件中的原数据\n        print('\\\\n')\n        print('!!!!!!!source_data=', source_data)\n    \n        replace_data = {\"Cookie\": Cookie, \"Authorization\": token_fix}  # cookie是上个接口获取的参数，Authorization是fixture中返回的\n        final_data = yaml_replace(str(source_data), replace_data)\n        print('!!!!!!!final_data= ', final_data)\n        allure.dynamic.title(final_data['title'])\n        dict_data = {\n            'url': host + final_data['url'],\n            'headers': final_data['headers'],\n            'timeout': 60\n        }\n        # dict_data['headers']['token'] = token_fix\n        print('!!!!!!!dict_data= ', dict_data)\n        res = getattr(ApiKey(), data['method'].lower())(**dict_data)\n        response_body = res.text\n        print(f'---------response_body= ', response_body)\n        status = ApiKey().get_text(response_body, '$.status')[0]\n        print(\"!!!!!!!!!!!!!status= \", status)\n>       assert status == 200\nE       assert 500 == 200\n\ntestcase/testcase_pytest/test_usermanage.py:74: AssertionError"}, "steps": [{"name": "发送get请求", "status": "passed", "parameters": [{"name": "url", "value": "'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo'"}, {"name": "params", "value": "None"}, {"name": "headers", "value": "{'Cookie': 'djsid=7fb2d8a4-9309-4f72-b4f0-d29bdb3966df; Domain=.wakedata.com; Path=/', 'Authorization': '87967688987', 'Content-Type': 'application/json;charset=UTF-8'}"}, {"name": "timeout", "value": "60"}], "start": 1652697850650, "stop": 1652697850682}, {"name": "获取返回结果字典值", "status": "passed", "parameters": [{"name": "res_data", "value": "'{\"timestamp\":\"2022-05-16T10:44:10.749+00:00\",\"path\":\"/dc-wisdom-manager/web/auth/getLoginInfo\",\"status\":500,\"error\":\"Internal Server Error\",\"message\":\"\",\"requestId\":\"b924eee4-38395\"}'"}, {"name": "key", "value": "'$.status'"}], "start": 1652697850682, "stop": 1652697850683}], "parameters": [{"name": "data", "value": "{'title': '检查用户是否登陆成功', 'url': '/dc-wisdom-manager/web/auth/getLoginInfo', 'method': 'get', 'headers': {'Cookie': '${Cookie}', 'Authorization': '${Authorization}', 'Content-Type': 'application/json;charset=UTF-8'}}"}], "start": 1652697850648, "stop": 1652697850683, "uuid": "2543f1b1-4c04-4549-b600-16b36bd9035b", "historyId": "0eab6a9b858728eec846da1a1def7b41", "testCaseId": "b0d3c97d18c9f2d8ccf795dbf08e113e", "fullName": "testcase.testcase_pytest.test_usermanage.TestUserManage#test_check_login", "labels": [{"name": "story", "value": "检查用户登陆情况"}, {"name": "parentSuite", "value": "testcase.testcase_pytest"}, {"name": "suite", "value": "test_usermanage"}, {"name": "subSuite", "value": "TestUserManage"}, {"name": "host", "value": "EvenZou-2.local"}, {"name": "thread", "value": "54378-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.testcase_pytest.test_usermanage"}]}