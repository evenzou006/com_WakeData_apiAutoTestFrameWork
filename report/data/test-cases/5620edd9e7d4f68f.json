{
  "uid" : "5620edd9e7d4f68f",
  "name" : "检查用户是否登陆成功",
  "fullName" : "testcase.testcase_pytest.test_usermanage.TestUserManage#test_check_login",
  "historyId" : "0eab6a9b858728eec846da1a1def7b41",
  "time" : {
    "start" : 1652668558498,
    "stop" : 1652668559542,
    "duration" : 1044
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 500 == 200",
  "statusTrace" : "self = <testcase.testcase_pytest.test_usermanage.TestUserManage object at 0x7feb8070f6d0>\ndata = {'headers': {'Content-Type': 'application/json;charset=UTF-8', 'Cookie': '${Cookie}'}, 'method': 'get', 'title': '检查用户是否登陆成功', 'url': 'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo'}\n\n    @allure.story(\"检查用户登陆情况\")\n    @pytest.mark.parametrize('data', yaml_read_dict(pytest_datadriver_path+'check_login.yaml'))\n    def test_check_login(self, data):\n        source_data = data\n        print('\\\\n')\n        print('!!!!!!!source_data=', source_data)\n        replace_data = {\"Cookie\": Cookie}\n        final_data = yaml_replace(str(source_data), replace_data)\n        print('!!!!!!!final_data= ', final_data)\n        allure.dynamic.title(final_data['title'])\n        dict_data = {\n            'url': final_data['url'],\n            'headers': final_data['headers'],\n            'timeout': 60\n        }\n        # dict_data['headers']['token'] = token_fix\n        print('!!!!!!!dict_data= ', dict_data)\n        res = getattr(ApiKey(), data['method'].lower())(**dict_data)\n        response_body = res.text\n        print(f'---------response_body= ', response_body)\n        status = ApiKey().get_text(response_body, '$.status')[0]\n        print(\"!!!!!!!!!!!!!status= \", status)\n>       assert status == 200\nE       assert 500 == 200\n\ntestcase/testcase_pytest/test_usermanage.py:69: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "mysql_fix",
    "time" : {
      "start" : 1652668557966,
      "stop" : 1652668557966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token_fix",
    "time" : {
      "start" : 1652668558497,
      "stop" : 1652668558497,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 500 == 200",
    "statusTrace" : "self = <testcase.testcase_pytest.test_usermanage.TestUserManage object at 0x7feb8070f6d0>\ndata = {'headers': {'Content-Type': 'application/json;charset=UTF-8', 'Cookie': '${Cookie}'}, 'method': 'get', 'title': '检查用户是否登陆成功', 'url': 'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo'}\n\n    @allure.story(\"检查用户登陆情况\")\n    @pytest.mark.parametrize('data', yaml_read_dict(pytest_datadriver_path+'check_login.yaml'))\n    def test_check_login(self, data):\n        source_data = data\n        print('\\\\n')\n        print('!!!!!!!source_data=', source_data)\n        replace_data = {\"Cookie\": Cookie}\n        final_data = yaml_replace(str(source_data), replace_data)\n        print('!!!!!!!final_data= ', final_data)\n        allure.dynamic.title(final_data['title'])\n        dict_data = {\n            'url': final_data['url'],\n            'headers': final_data['headers'],\n            'timeout': 60\n        }\n        # dict_data['headers']['token'] = token_fix\n        print('!!!!!!!dict_data= ', dict_data)\n        res = getattr(ApiKey(), data['method'].lower())(**dict_data)\n        response_body = res.text\n        print(f'---------response_body= ', response_body)\n        status = ApiKey().get_text(response_body, '$.status')[0]\n        print(\"!!!!!!!!!!!!!status= \", status)\n>       assert status == 200\nE       assert 500 == 200\n\ntestcase/testcase_pytest/test_usermanage.py:69: AssertionError",
    "steps" : [ {
      "name" : "发送get请求",
      "time" : {
        "start" : 1652668558500,
        "stop" : 1652668559540,
        "duration" : 1040
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo'"
      }, {
        "name" : "params",
        "value" : "None"
      }, {
        "name" : "headers",
        "value" : "{'Cookie': 'djsid=9071c76d-95df-4c42-936c-29d63896e014; Domain=.wakedata.com; Path=/, rememberMe=deleteMe; Path=/p; Max-Age=0; Expires=Sun, 15-May-2022 02:35:58 GMT', 'Content-Type': 'application/json;charset=UTF-8'}"
      }, {
        "name" : "timeout",
        "value" : "60"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "获取返回结果字典值",
      "time" : {
        "start" : 1652668559540,
        "stop" : 1652668559541,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "res_data",
        "value" : "'{\"timestamp\":\"2022-05-16T02:35:59.574+00:00\",\"path\":\"/dc-wisdom-manager/web/auth/getLoginInfo\",\"status\":500,\"error\":\"Internal Server Error\",\"message\":\"\",\"requestId\":\"d5860caa-38366\"}'"
      }, {
        "name" : "key",
        "value" : "'$.status'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "token_fix::0",
    "time" : {
      "start" : 1652668559552,
      "stop" : 1652668559552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "mysql_fix::0",
    "time" : {
      "start" : 1652668559553,
      "stop" : 1652668559553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "检查用户登陆情况"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.testcase_pytest"
  }, {
    "name" : "suite",
    "value" : "test_usermanage"
  }, {
    "name" : "subSuite",
    "value" : "TestUserManage"
  }, {
    "name" : "host",
    "value" : "EvenZou-2.local"
  }, {
    "name" : "thread",
    "value" : "7560-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.testcase_pytest.test_usermanage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'title': '检查用户是否登陆成功', 'url': 'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo', 'method': 'get', 'headers': {'Cookie': '${Cookie}', 'Content-Type': 'application/json;charset=UTF-8'}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5620edd9e7d4f68f.json",
  "parameterValues" : [ "{'title': '检查用户是否登陆成功', 'url': 'http://dc-sales.wakedata.com/dc-wisdom-manager/web/auth/getLoginInfo', 'method': 'get', 'headers': {'Cookie': '${Cookie}', 'Content-Type': 'application/json;charset=UTF-8'}}" ]
}